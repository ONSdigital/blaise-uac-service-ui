// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Upload Sample Page select file page matches Snapshot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <main
        class="ons-page__main ons-u-mt-no"
        id="main-content"
      >
        <ul
          class="ons-list ons-list--bare ons-list--inline ons-u-mt-m"
        >
          <li
            class="ons-list__item"
          >
            <a
              href="/app"
              id="generate-uac-link"
            >
              Home
            </a>
          </li>
        </ul>
        <form
          action="#"
          id="formID"
        >
          <div>
            <div
              class="ons-u-mt-m"
            >
              <div
                class="ons-grid"
              >
                <div
                  class="ons-grid__col ons-col-8@m"
                >
                  <h1>
                    Which questionnaire do you wish to generate UACs for?
                  </h1>
                  <div
                    class="ons-panel ons-panel--info ons-panel--no-title  ons-u-mt-m"
                  >
                    <div
                      class="ons-panel__body "
                    >
                      <p>
                        The questionnaire name must match the name of the questionnaire that is going to be deployed via DQS.
                      </p>
                      <p>
                        The start of the questionnaire name must be three letters followed by four numbers. Example, OPN2101A.
                      </p>
                    </div>
                  </div>
                  <div
                    class="ons-field"
                  >
                    <label
                      class="ons-label "
                      for="questionnaire name"
                    >
                      Questionnaire name
                    </label>
                    <input
                      class="ons-input ons-input--text ons-input-type__input"
                      id="questionnaire name"
                      name="questionnaire name"
                      props="[object Object]"
                      type="input"
                      value=""
                    />
                  </div>
                </div>
              </div>
            </div>
            <div
              class="ons-btn-group ons-u-mt-m"
            >
              <button
                class="ons-btn "
                data-testid="button"
                id="next-screen-button"
                type="submit"
              >
                <span
                  class="ons-btn__inner"
                >
                  Continue
                </span>
              </button>
            </div>
          </div>
        </form>
      </main>
    </div>
  </body>,
  "container": <div>
    <main
      class="ons-page__main ons-u-mt-no"
      id="main-content"
    >
      <ul
        class="ons-list ons-list--bare ons-list--inline ons-u-mt-m"
      >
        <li
          class="ons-list__item"
        >
          <a
            href="/app"
            id="generate-uac-link"
          >
            Home
          </a>
        </li>
      </ul>
      <form
        action="#"
        id="formID"
      >
        <div>
          <div
            class="ons-u-mt-m"
          >
            <div
              class="ons-grid"
            >
              <div
                class="ons-grid__col ons-col-8@m"
              >
                <h1>
                  Which questionnaire do you wish to generate UACs for?
                </h1>
                <div
                  class="ons-panel ons-panel--info ons-panel--no-title  ons-u-mt-m"
                >
                  <div
                    class="ons-panel__body "
                  >
                    <p>
                      The questionnaire name must match the name of the questionnaire that is going to be deployed via DQS.
                    </p>
                    <p>
                      The start of the questionnaire name must be three letters followed by four numbers. Example, OPN2101A.
                    </p>
                  </div>
                </div>
                <div
                  class="ons-field"
                >
                  <label
                    class="ons-label "
                    for="questionnaire name"
                  >
                    Questionnaire name
                  </label>
                  <input
                    class="ons-input ons-input--text ons-input-type__input"
                    id="questionnaire name"
                    name="questionnaire name"
                    props="[object Object]"
                    type="input"
                    value=""
                  />
                </div>
              </div>
            </div>
          </div>
          <div
            class="ons-btn-group ons-u-mt-m"
          >
            <button
              class="ons-btn "
              data-testid="button"
              id="next-screen-button"
              type="submit"
            >
              <span
                class="ons-btn__inner"
              >
                Continue
              </span>
            </button>
          </div>
        </div>
      </form>
    </main>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
